# 1. 删除当前环境
conda deactivate
conda env remove -n minkloc3dv2
# 清除缓存
conda clean --all -y 

# 2. 重新创建环境，更仔细地管理依赖
conda create -n minkloc3dv2 python=3.8 -y
conda activate minkloc3dv2

# 3. 按顺序安装包，避免冲突
# 首先安装核心包
conda install pytorch=1.12.1 torchvision torchaudio cudatoolkit=11.6 -c pytorch -y

# 安装系统依赖
conda install openblas-devel numpy pandas -c conda-forge -y

# 安装Python依赖（使用conda优先，避免pip冲突）
conda install ipython jupyter notebook -c conda-forge -y

# 使用pip安装剩余包
pip install pytorch-metric-learning>=1.1
pip install wandb
pip install pexpect  # 明确安装这个依赖

# 下载并安装CUDA 11.8
wget https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda_11.8.0_520.61.05_linux.run
sudo sh cuda_11.8.0_520.61.05_linux.run --toolkit --silent --override --installpath=/usr/local/cuda-11.8

# 创建MinkLoc3Dv2环境脚本
cat > ~/setup_minkloc_env.sh << 'EOF'
#!/bin/bash
echo "Setting up environment for MinkLoc3Dv2 with RTX 3090 Ti..."
export CUDA_HOME=/usr/local/cuda-11.8
export PATH=/usr/local/cuda-11.8/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda-11.8/lib64:$LD_LIBRARY_PATH

# 设置GPU架构（支持RTX 3090 Ti的8.6）
export TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0 7.5 8.0 8.6"

# 激活conda环境
conda activate minkloc3dv2

# 验证环境
echo "CUDA version:"
nvcc --version
echo "GPU Architecture Support:"
echo "RTX 3090 Ti (Compute 8.6) should now be supported"
EOF

chmod +x ~/setup_minkloc_env.sh

# 切换环境
source ~/setup_minkloc_env.sh

# 验证PyTorch CUDA支持
python -c "
import torch
print('PyTorch version:', torch.__version__)
print('CUDA available:', torch.cuda.is_available())
print('CUDA version:', torch.version.cuda)
if torch.cuda.is_available():
    print('GPU name:', torch.cuda.get_device_name(0))
    print('CUDA capability:', torch.cuda.get_device_capability(0))
"

# 如果验证通过，继续安装MinkowskiEngine
cd ~/MinkowskiEngine
make clean
rm -rf build/  # 清理之前的构建文件

# 明确指定支持的GPU架构
export TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0 7.5 8.0 8.6"
python setup.py install --blas=openblas --force_cuda
